%% Reconstruct Handwritten Digit Images Using Sparse Autoencoder  
%% Plot parameters in 3D of several codes.
%Lundi 12 Mars, 11h.

%% 
% Load the training data. 

load('digits.mat');
tic

n=3;
N=10000;
N2=0.7*N;
I=I(:,:,1:N);
J=reshape(I,28*28,N);
XTrain=J(:,1:N2);

%%
% The training data is a 28*28-N matrix representing a synthetic image of a handwritten digit.  

%% 
% % Train an autoencoder with a hidden layer containing 25 neurons. 
hiddenSize=3;
autoenc=trainAutoencoder(XTrain,hiddenSize,...
        'L2WeightRegularization',0.004,...
        'SparsityRegularization',4,...
        'SparsityProportion',0.15);  

%% 
% Load the test data. 
XTest=J(:,N2+1:N2+N/10); 

%% 
% Changing some parameters in the code.
c=['.','o','+','*','s','d','v','^','<','>']';
d=['b','g','r','c','m','y','k','b','g','r']';
legend=['0','1','2','3','4','5','6','7','8','9'];
%code=[hiddenSize,0.3*N]
code=encode(autoenc,XTest);
L=L(N2+1:N2+N/10);
figure;
% gscatter(code(1,:),code(2,:),L,d,c)
% xlabel('variable1');
% ylabel('variable2');
%  
% Initialize some axes
view(3)
grid on
hold on
C={};
for i=0:9
      index=find(L==i);
%       C{i}=[code(1,index),code(2,index),code(3,index)];
%       scatter3(code(1,index),code(2,index),code(3,index),d(i+1),c(i+1));
      text(code(1,index),code(2,index),code(3,index),legend(i+1));
end

% scatter3(C{1},C{2},C{3},C{4},C{5},C{6},C{7},C{8},C{9},C{10},d(i),c(i));




%% 
% % Reconstruct the test image data using the trained autoencoder, |autoenc|. 
% 
% xReconstructed=decode(autoenc,code);
% xReconstructed=reshape(xReconstructed,28,28,N-N2);
% 
% 
% %%
% % View the difference by changing the code.
% 
% figure;
% subplot(1,3,1);
% imagesc(I(:,:,a+N2));
% subplot(1,3,2);
% imagesc(xReconstructed(:,:,a));
% 
% 
% toc
